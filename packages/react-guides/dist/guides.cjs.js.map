{"version":3,"file":"guides.cjs.js","sources":["../src/react-guides/utils.ts","../src/react-guides/consts.ts","../src/react-guides/Guides.tsx","../src/react-guides/index.umd.ts"],"sourcesContent":["import { prefixNames } from \"framework-utils\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(\"scena-\", ...classNames);\n}\n","import { prefix } from \"./utils\";\nimport { prefixCSS } from \"framework-utils\";\nimport { GuidesOptions } from \"./types\";\nimport { PROPERTIES as RULER_PROPERTIES } from \"@scena/react-ruler\";\n\nexport const RULER = prefix(\"ruler\");\nexport const ADDER = prefix(\"guide\", \"adder\");\nexport const GUIDES = prefix(\"guides\");\nexport const GUIDE = prefix(\"guide\");\nexport const DRAGGING = prefix(\"dragging\");\nexport const DISPLAY_DRAG = prefix(\"display-drag\");\nexport const GUIDES_CSS = prefixCSS(\"scena-\", `\n{\n    position: relative;\n}\ncanvas {\n    position: relative;\n}\n.guide-origin {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    top: 0;\n    left: 0;\n    opacity: 0;\n}\n.guides {\n    position: absolute;\n    top: 0;\n    left: 0;\n    will-change: transform;\n    z-index: 2000;\n}\n.display-drag {\n    position: absolute;\n    will-change: transform;\n    z-index: 2000;\n    font-weight: bold;\n    font-size: 12px;\n    display: none;\n    left: 20px;\n    top: -20px;\n    color: #8f8f8f;\n}\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n    top: 30px;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n    left: 30px;\n}\n.guide {\n    position: absolute;\n    z-index: 2;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 20px;\n}\n:host.vertical .guide:before {\n    width: 20px;\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n`);\n\nexport const PROPERTIES: Array<keyof GuidesOptions> = [\n    \"className\",\n    \"rulerStyle\",\n    'snapThreshold',\n    \"snaps\",\n    \"displayDragPos\",\n    \"cspNonce\",\n    'dragPosFormat',\n    \"defaultGuides\",\n    \"showGuides\",\n    ...RULER_PROPERTIES,\n];\n\nexport const METHODS = [\n    \"getGuides\",\n    \"loadGuides\",\n    \"scroll\",\n    \"scrollGuides\",\n    \"resize\",\n] as const;\n\nexport const EVENTS = [\n    \"changeGuides\",\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n] as const;\n","import * as React from \"react\";\nimport Ruler, {\n    PROPERTIES as RULER_PROPERTIES,\n    RulerProps,\n} from \"@scena/react-ruler\";\nimport { ref, refs } from \"framework-utils\";\nimport Gesto, { OnDragEnd } from \"gesto\";\nimport styled, { StyledElement } from \"react-css-styled\";\nimport {\n    GUIDES,\n    GUIDE,\n    DRAGGING,\n    ADDER,\n    DISPLAY_DRAG,\n    GUIDES_CSS,\n} from \"./consts\";\nimport { prefix } from \"./utils\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport { GuidesState, GuidesProps, GuidesInterface } from \"./types\";\nimport { getDistElementMatrix, calculateMatrixDist } from \"css-to-mat\";\n\nconst GuidesElement = styled(\"div\", GUIDES_CSS);\n\nexport default class Guides\n    extends React.PureComponent<GuidesProps, GuidesState>\n    implements GuidesInterface {\n    public static defaultProps: GuidesProps = {\n        className: \"\",\n        defaultGuides: [],\n        digit: 0,\n        displayDragPos: false,\n        dragPosFormat: (v) => v,\n        guidesColor: \"#8f8f8f\",\n        onChangeGuides: () => {},\n        onDrag: () => {},\n        onDragEnd: () => {},\n        onDragStart: () => {},\n        showGuides: true,\n        snaps: [],\n        snapThreshold: 5,\n        style: { width: \"100%\", height: \"100%\" },\n        type: \"horizontal\",\n        zoom: 1,\n    };\n    public state: GuidesState = {\n        guides: [],\n    };\n    public adderElement!: HTMLElement;\n    public scrollPos: number = 0;\n    public ruler!: Ruler;\n    private manager!: StyledElement<HTMLElement>;\n    private guidesElement!: HTMLElement;\n    private displayElement!: HTMLElement;\n    private originElement!: HTMLElement;\n    private gesto!: Gesto;\n    private guideElements: HTMLElement[] = [];\n\n    public render() {\n        const {\n            className,\n            cspNonce,\n            displayDragPos,\n            rulerStyle,\n            style,\n            type,\n            zoom,\n        } = this.props as Required<GuidesProps>;\n        const props = this.props;\n        const translateName = this.getTranslateName();\n\n        const rulerProps: RulerProps = {};\n\n        RULER_PROPERTIES.forEach((name) => {\n            if (name === \"style\") {\n                return;\n            }\n            (rulerProps as any)[name] = props[name];\n        });\n        const guideColor =\n            type === \"horizontal\"\n                ? { borderTop: `1px dashed ${this.props.guidesColor}` }\n                : { borderLeft: `1px dashed ${this.props.guidesColor}` };\n        return (\n            <GuidesElement\n                ref={ref(this, \"manager\")}\n                cspNonce={cspNonce}\n                className={`${prefix(\"manager\", type)} ${className}`}\n                style={style}\n            >\n                <div\n                    className={prefix(\"guide-origin\")}\n                    ref={ref(this, \"originElement\")}\n                ></div>\n                <Ruler\n                    ref={ref(this, \"ruler\")}\n                    style={rulerStyle}\n                    {...rulerProps}\n                />\n                <div\n                    className={GUIDES}\n                    ref={ref(this, \"guidesElement\")}\n                    style={{\n                        transform: `${translateName}(${\n                            -this.scrollPos * zoom\n                        }px)`,\n                    }}\n                >\n                    {displayDragPos && (\n                        <div\n                            className={DISPLAY_DRAG}\n                            ref={ref(this, \"displayElement\")}\n                            style={{ color: this.props.guidesColor }}\n                        />\n                    )}\n                    <div className={ADDER} ref={ref(this, \"adderElement\")} style={{...guideColor}} />\n                    {this.renderGuides({ guideColor })}\n                </div>\n            </GuidesElement>\n        );\n    }\n    public renderGuides({ guideColor }: { [key: string]: React.CSSProperties }) {\n        const { showGuides, type, zoom } = this.props as Required<GuidesProps>;\n        const translateName = this.getTranslateName();\n        const guides = [...this.state.guides];\n        this.guideElements = [];\n        if (showGuides) {\n            return guides.map((pos, i) => {\n                return (\n                    <div\n                        className={prefix(\"guide\", type)}\n                        ref={refs(this, \"guideElements\", i)}\n                        key={i}\n                        data-index={i}\n                        data-pos={pos}\n                        style={{\n                            ...guideColor,\n                            transform: `${translateName}(${pos * zoom}px)`,\n                        }}\n                    ></div>\n                );\n            });\n        }\n        return;\n    }\n    public componentDidMount() {\n        this.gesto = new Gesto(this.manager.getElement(), {\n            container: document.body,\n        })\n            .on(\"dragStart\", (e) => {\n                const inputEvent = e.inputEvent;\n                const target = inputEvent.target;\n                const datas = e.datas;\n                const canvasElement = this.ruler.canvasElement;\n                const guidesElement = this.guidesElement;\n                const isHorizontal = this.props.type === \"horizontal\";\n                const originRect = this.originElement.getBoundingClientRect();\n                const matrix = getDistElementMatrix(this.manager.getElement());\n                const offsetPos = calculateMatrixDist(matrix, [\n                    e.clientX - originRect.left,\n                    e.clientY - originRect.top,\n                ]);\n                offsetPos[0] -= guidesElement.offsetLeft;\n                offsetPos[1] -= guidesElement.offsetTop;\n                offsetPos[isHorizontal ? 1 : 0] +=\n                    this.scrollPos * this.props.zoom!;\n\n                datas.offsetPos = offsetPos;\n                datas.matrix = matrix;\n\n                if (target === canvasElement) {\n                    datas.fromRuler = true;\n                    datas.target = this.adderElement;\n                } else if (hasClass(target, GUIDE)) {\n                    datas.target = target;\n                } else {\n                    e.stop();\n                    return false;\n                }\n                this.onDragStart(e);\n            })\n            .on(\"drag\", this.onDrag)\n            .on(\"dragEnd\", this.onDragEnd);\n        this.setState({ guides: this.props.defaultGuides || [] }); // pass array of guides on mount data to create gridlines or something like that in ui\n    }\n    public componentWillUnmount() {\n        this.gesto.unset();\n    }\n    public componentDidUpdate(prevProps: any) {\n        if (prevProps.defaultGuides !== this.props.defaultGuides) {\n            // to dynamically update guides from code rather than dragging guidelines\n            this.setState({ guides: this.props.defaultGuides || [] });\n        }\n    }\n    /**\n     * Load the current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public loadGuides(guides: number[]) {\n        this.setState({\n            guides: [...guides],\n        });\n    }\n    /**\n     * Get current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public getGuides(): number[] {\n        return [...this.state.guides];\n    }\n    /**\n     * Scroll the positions of the guidelines opposite the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scrollGuides(pos: number) {\n        const { zoom } = this.props as Required<GuidesProps>;\n        const guidesElement = this.guidesElement;\n\n        this.scrollPos = pos;\n        guidesElement.style.transform = `${this.getTranslateName()}(${\n            -pos * zoom\n        }px)`;\n\n        const guides = [...this.state.guides];\n        this.guideElements.forEach((el, i) => {\n            if (!el) {\n                return;\n            }\n            el.style.display = -pos + guides[i] < 0 ? \"none\" : \"block\";\n        });\n    }\n    /**\n     * Recalculate the size of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public resize() {\n        this.ruler.resize();\n    }\n    /**\n     * Scroll the position of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scroll(pos: number) {\n        this.ruler.scroll(pos);\n    }\n    private onDragStart = (e: any) => {\n        const { datas, inputEvent } = e;\n        const { onDragStart } = this.props;\n\n        addClass(datas.target, DRAGGING);\n        this.onDrag(e);\n\n        /**\n         * When the drag starts, the dragStart event is called.\n         * @memberof Guides\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         */\n        onDragStart!({\n            ...e,\n            dragElement: datas.target,\n        });\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n    };\n    private onDrag = (e: any) => {\n        const nextPos = this.movePos(e);\n\n        /**\n         * When dragging, the drag event is called.\n         * @memberof Guides\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         */\n        this.props.onDrag!({\n            ...e,\n            dragElement: e.datas.target,\n        });\n        return nextPos;\n    };\n    private onDragEnd = (e: OnDragEnd) => {\n        const { datas, isDouble, distX, distY } = e;\n        const pos = this.movePos(e);\n        const guides = [...this.state.guides];\n        const { onChangeGuides, zoom, displayDragPos, digit } = this.props;\n        const guidePos = parseFloat((pos / zoom!).toFixed(digit || 0));\n\n        if (displayDragPos) {\n            this.displayElement.style.cssText += `display: none;`;\n        }\n        removeClass(datas.target, DRAGGING);\n        /**\n         * When the drag finishes, the dragEnd event is called.\n         * @memberof Guides\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        this.props.onDragEnd!({\n            ...e,\n            dragElement: datas.target,\n        });\n        /**\n         * The `changeGuides` event occurs when the guideline is added / removed / changed.\n         * @memberof Guides\n         * @event changeGuides\n         * @param {OnChangeGuides} - Parameters for the changeGuides event\n         */\n        if (datas.fromRuler) {\n            if (pos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n                this.setState(\n                    {\n                        guides: [...guides, guidePos],\n                    },\n                    () => {\n                        onChangeGuides!({\n                            guides: [...this.state.guides],\n                            distX,\n                            distY,\n                        });\n                    }\n                );\n            }\n        } else {\n            const index = datas.target.getAttribute(\"data-index\");\n\n            if (isDouble || guidePos < this.scrollPos) {\n                guides.splice(index, 1);\n            } else if (guides.indexOf(guidePos) > -1) {\n                return;\n            } else {\n                guides[index] = guidePos;\n            }\n            this.setState(\n                {\n                    guides: [...guides],\n                },\n                () => {\n                    const nextGuides = [...this.state.guides];\n                    onChangeGuides!({\n                        distX,\n                        distY,\n                        guides: nextGuides,\n                    });\n                }\n            );\n        }\n    };\n    private movePos(e: any) {\n        const { datas, distX, distY } = e;\n        const props = this.props;\n        const {\n            type,\n            zoom,\n            snaps,\n            snapThreshold,\n            displayDragPos,\n            digit,\n        } = props;\n        const dragPosFormat = props.dragPosFormat || ((v) => v);\n        const isHorizontal = type === \"horizontal\";\n        const matrixPos = calculateMatrixDist(datas.matrix, [distX, distY]);\n        const offsetPos = datas.offsetPos;\n        const offsetX = matrixPos[0] + offsetPos[0];\n        const offsetY = matrixPos[1] + offsetPos[1];\n        let nextPos = Math.round(isHorizontal ? offsetY : offsetX);\n        let guidePos = parseFloat((nextPos / zoom!).toFixed(digit || 0));\n        const guideSnaps = snaps!.slice().sort((a, b) => {\n            return Math.abs(guidePos - a) - Math.abs(guidePos - b);\n        });\n\n        if (\n            guideSnaps.length &&\n            Math.abs(guideSnaps[0] * zoom! - nextPos) < snapThreshold!\n        ) {\n            guidePos = guideSnaps[0];\n            nextPos = guidePos * zoom!;\n        }\n        if (displayDragPos) {\n            const displayPos =\n                type === \"horizontal\" ? [offsetX, nextPos] : [nextPos, offsetY];\n            this.displayElement.style.cssText += `display: block;transform: translate(-50%, -50%) translate(${displayPos\n                .map((v) => `${v}px`)\n                .join(\", \")})`;\n            this.displayElement.innerHTML = `${dragPosFormat!(guidePos)}`;\n        }\n        datas.target.setAttribute(\"data-pos\", guidePos);\n        datas.target.style.transform = `${this.getTranslateName()}(${nextPos}px)`;\n\n        return nextPos;\n    }\n    private getTranslateName() {\n        return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    }\n}\n","import Guides, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Guides as any)[name] = (others as any)[name];\n}\nexport default Guides;\n"],"names":["prefix","_i","classNames","prefixNames","RULER","ADDER","GUIDES","GUIDE","DRAGGING","DISPLAY_DRAG","GUIDES_CSS","prefixCSS","PROPERTIES","RULER_PROPERTIES","METHODS","EVENTS","GuidesElement","styled","tslib_1","_this","guides","e","datas","inputEvent","onDragStart","addClass","target","onDrag","dragElement","stopPropagation","preventDefault","nextPos","movePos","props","isDouble","distX","distY","pos","state","_a","onChangeGuides","zoom","displayDragPos","digit","guidePos","parseFloat","toFixed","displayElement","style","cssText","removeClass","onDragEnd","fromRuler","scrollPos","indexOf","setState","index","getAttribute","splice","nextGuides","className","cspNonce","rulerStyle","type","translateName","getTranslateName","rulerProps","forEach","name","guideColor","borderTop","guidesColor","borderLeft","React","ref","Ruler","transform","color","renderGuides","_b","showGuides","guideElements","map","i","refs","key","gesto","Gesto","manager","getElement","container","document","body","on","canvasElement","ruler","guidesElement","isHorizontal","originRect","originElement","getBoundingClientRect","matrix","getDistElementMatrix","offsetPos","calculateMatrixDist","clientX","left","clientY","top","offsetLeft","offsetTop","adderElement","hasClass","stop","defaultGuides","unset","prevProps","el","display","resize","scroll","snaps","snapThreshold","dragPosFormat","v","matrixPos","offsetX","offsetY","Math","round","guideSnaps","slice","sort","a","b","abs","length","displayPos","join","innerHTML","setAttribute","Guides","width","height","others"],"mappings":"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"}