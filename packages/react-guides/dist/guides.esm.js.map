{"version":3,"file":"guides.esm.js","sources":["../src/react-guides/utils.ts","../src/react-guides/consts.ts","../src/react-guides/Guides.tsx"],"sourcesContent":["import { prefixNames } from \"framework-utils\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(\"scena-\", ...classNames);\n}\n","import { prefix } from \"./utils\";\nimport { prefixCSS } from \"framework-utils\";\nimport { GuidesOptions } from \"./types\";\nimport { PROPERTIES as RULER_PROPERTIES } from \"@scena/react-ruler\";\n\nexport const RULER = prefix(\"ruler\");\nexport const ADDER = prefix(\"guide\", \"adder\");\nexport const GUIDES = prefix(\"guides\");\nexport const GUIDE = prefix(\"guide\");\nexport const DRAGGING = prefix(\"dragging\");\nexport const DISPLAY_DRAG = prefix(\"display-drag\");\nexport const GUIDES_CSS = prefixCSS(\"scena-\", `\n{\n    position: relative;\n}\ncanvas {\n    position: relative;\n}\n.guide-origin {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    top: 0;\n    left: 0;\n    opacity: 0;\n}\n.guides {\n    position: absolute;\n    top: 0;\n    left: 0;\n    will-change: transform;\n    z-index: 2000;\n}\n.display-drag {\n    position: absolute;\n    will-change: transform;\n    z-index: 2000;\n    font-weight: bold;\n    font-size: 12px;\n    display: none;\n    left: 20px;\n    top: -20px;\n    color: #8f8f8f;\n}\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n    top: 30px;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n    left: 30px;\n}\n.guide {\n    position: absolute;\n    z-index: 2;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 20px;\n}\n:host.vertical .guide:before {\n    width: 20px;\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n`);\n\nexport const PROPERTIES: Array<keyof GuidesOptions> = [\n    \"className\",\n    \"rulerStyle\",\n    'snapThreshold',\n    \"snaps\",\n    \"displayDragPos\",\n    \"cspNonce\",\n    'dragPosFormat',\n    \"defaultGuides\",\n    \"showGuides\",\n    ...RULER_PROPERTIES,\n];\n\nexport const METHODS = [\n    \"getGuides\",\n    \"loadGuides\",\n    \"scroll\",\n    \"scrollGuides\",\n    \"resize\",\n] as const;\n\nexport const EVENTS = [\n    \"changeGuides\",\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n] as const;\n","    import * as React from \"react\";\nimport Ruler, { PROPERTIES as RULER_PROPERTIES, RulerProps } from \"@scena/react-ruler\";\nimport { ref, refs } from \"framework-utils\";\nimport Gesto, { OnDragEnd } from \"gesto\";\nimport styled, { StyledElement } from \"react-css-styled\";\nimport {\n    GUIDES,\n    GUIDE,\n    DRAGGING,\n    ADDER,\n    DISPLAY_DRAG,\n    GUIDES_CSS,\n} from \"./consts\";\nimport { prefix } from \"./utils\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport { GuidesState, GuidesProps, GuidesInterface } from \"./types\";\nimport { getDistElementMatrix, calculateMatrixDist } from \"css-to-mat\";\n\nconst GuidesElement = styled(\"div\", GUIDES_CSS);\n\nexport default class Guides\n    extends React.PureComponent<GuidesProps, GuidesState>\n    implements GuidesInterface {\n    public static defaultProps: GuidesProps = {\n        className: \"\",\n        defaultGuides: [],\n        digit: 0,\n        displayDragPos: false,\n        guidesColor: \"#8f8f8f\",\n        dragPosFormat: v => v,\n        lockGuides: false,\n        showGuides: true,\n        snaps: [],\n        snapThreshold: 5,\n        style: { width: \"100%\", height: \"100%\" },\n        type: \"horizontal\",\n        zoom: 1,\n    };\n    public state: GuidesState = {\n        guides: [],\n    };\n    public adderElement!: HTMLElement;\n    public scrollPos: number = 0;\n    public ruler!: Ruler;\n    private manager!: StyledElement<HTMLElement>;\n    private guidesElement!: HTMLElement;\n    private displayElement!: HTMLElement;\n    private originElement!: HTMLElement;\n    private gesto!: Gesto;\n    private guideElements: HTMLElement[] = [];\n\n    public render() {\n        const {\n            className,\n            cspNonce,\n            displayDragPos,\n            rulerStyle,\n            style,\n            type,\n            zoom,\n        } = this.props as Required<GuidesProps>;\n        const props = this.props;\n        const translateName = this.getTranslateName();\n\n        const rulerProps: RulerProps = {};\n\n        RULER_PROPERTIES.forEach((name) => {\n            if (name === \"style\") {\n                return;\n            }\n            (rulerProps as any)[name] = props[name];\n        });\n        const guideColor =\n            type === \"horizontal\"\n                ? { borderTop: `1px dashed ${this.props.guidesColor}` }\n                : { borderLeft: `1px dashed ${this.props.guidesColor}` };\n        return (\n            <GuidesElement\n                ref={ref(this, \"manager\")}\n                cspNonce={cspNonce}\n                className={`${prefix(\"manager\", type)} ${className}`}\n                style={style}\n            >\n                <div\n                    className={prefix(\"guide-origin\")}\n                    ref={ref(this, \"originElement\")}\n                ></div>\n                <Ruler\n                    ref={ref(this, \"ruler\")}\n                    style={rulerStyle}\n                    {...rulerProps}\n                />\n                <div\n                    className={GUIDES}\n                    ref={ref(this, \"guidesElement\")}\n                    style={{\n                        transform: `${translateName}(${\n                            -this.scrollPos * zoom\n                        }px)`,\n                    }}\n                >\n                    {displayDragPos && (\n                        <div\n                            className={DISPLAY_DRAG}\n                            ref={ref(this, \"displayElement\")}\n                            style={{ color: this.props.guidesColor }}\n                        />\n                    )}\n                    <div className={ADDER} ref={ref(this, \"adderElement\")} style={{...guideColor}} />\n                    {this.renderGuides({ guideColor })}\n                </div>\n            </GuidesElement>\n        );\n    }\n    public renderGuides({ guideColor }: { [key: string]: React.CSSProperties }) {\n        const { showGuides, type, zoom } = this.props as Required<GuidesProps>;\n        const translateName = this.getTranslateName();\n        const guides = [...this.state.guides];\n        this.guideElements = [];\n        if (showGuides) {\n            return guides.map((pos, i) => {\n                return (<div className={prefix(\"guide\", type)}\n                    ref={refs(this, \"guideElements\", i)}\n                    key={i}\n                    data-index={i}\n                    data-pos={pos}\n                    style={{\n                        ...guideColor,\n                        transform: `${translateName}(${pos * zoom}px) translateZ(0px)`,\n                    }}></div>);\n            });\n        }\n        return;\n    }\n    public componentDidMount() {\n        this.gesto = new Gesto(this.manager.getElement(), {\n            container: document.body,\n        }).on(\"dragStart\", e => {\n            const {\n                type,\n                zoom,\n                lockGuides,\n            } = this.props;\n\n            if (lockGuides === true) {\n                e.stop();\n                return;\n            }\n            const inputEvent = e.inputEvent;\n            const target = inputEvent.target;\n            const datas = e.datas;\n            const canvasElement = this.ruler.canvasElement;\n            const guidesElement = this.guidesElement;\n            const isHorizontal = type === \"horizontal\";\n            const originRect = this.originElement.getBoundingClientRect();\n            const matrix = getDistElementMatrix(this.manager.getElement());\n            const offsetPos = calculateMatrixDist(matrix, [\n                e.clientX - originRect.left,\n                e.clientY - originRect.top,\n            ]);\n            offsetPos[0] -= guidesElement.offsetLeft;\n            offsetPos[1] -= guidesElement.offsetTop;\n            offsetPos[isHorizontal ? 1 : 0] += this.scrollPos * zoom!;\n\n                datas.offsetPos = offsetPos;\n                datas.matrix = matrix;\n\n            let isLockAdd = lockGuides && lockGuides.indexOf(\"add\") > -1;\n            let isLockRemove = lockGuides && lockGuides.indexOf(\"remove\") > -1;\n            let isLockChange = lockGuides && lockGuides.indexOf(\"change\") > -1;\n\n            if (target === canvasElement) {\n                if (isLockAdd) {\n                    e.stop();\n                    return;\n                }\n                datas.fromRuler = true;\n                datas.target = this.adderElement;\n                // add\n            } else if (hasClass(target, GUIDE)) {\n                if (isLockRemove && isLockChange) {\n                    e.stop();\n                    return;\n                }\n                datas.target = target;\n                // change\n            } else {\n                e.stop();\n                return false;\n            }\n            this.onDragStart(e);\n        }).on(\"drag\", this.onDrag).on(\"dragEnd\", this.onDragEnd);\n        this.setState({ guides: this.props.defaultGuides || [] }); // pass array of guides on mount data to create gridlines or something like that in ui\n    }\n    public componentWillUnmount() {\n        this.gesto.unset();\n    }\n    public componentDidUpdate(prevProps: any) {\n        if (prevProps.defaultGuides !== this.props.defaultGuides) {\n            // to dynamically update guides from code rather than dragging guidelines\n            this.setState({ guides: this.props.defaultGuides || [] });\n        }\n    }\n    /**\n     * Load the current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public loadGuides(guides: number[]) {\n        this.setState({\n            guides: [...guides],\n        });\n    }\n    /**\n     * Get current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public getGuides(): number[] {\n        return [...this.state.guides];\n    }\n    /**\n     * Scroll the positions of the guidelines opposite the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scrollGuides(pos: number) {\n        const { zoom } = this.props as Required<GuidesProps>;\n        const guidesElement = this.guidesElement;\n\n        this.scrollPos = pos;\n        guidesElement.style.transform = `${this.getTranslateName()}(${\n            -pos * zoom\n        }px)`;\n\n        const guides = [...this.state.guides];\n        this.guideElements.forEach((el, i) => {\n            if (!el) {\n                return;\n            }\n            el.style.display = -pos + guides[i] < 0 ? \"none\" : \"block\";\n        });\n    }\n    /**\n     * Recalculate the size of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public resize() {\n        this.ruler.resize();\n    }\n    /**\n     * Scroll the position of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scroll(pos: number) {\n        this.ruler.scroll(pos);\n    }\n    private onDragStart = (e: any) => {\n        const { datas, inputEvent } = e;\n        const { onDragStart, lockGuides } = this.props;\n\n        addClass(datas.target, DRAGGING);\n        this.onDrag(e);\n\n        /**\n         * When the drag starts, the dragStart event is called.\n         * @memberof Guides\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         */\n        onDragStart!({\n            ...e,\n            dragElement: datas.target,\n        });\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n    };\n    private onDrag = (e: any) => {\n        const nextPos = this.movePos(e);\n\n        /**\n         * When dragging, the drag event is called.\n         * @memberof Guides\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         */\n        this.props.onDrag!({\n            ...e,\n            dragElement: e.datas.target,\n        });\n        return nextPos;\n    };\n    private onDragEnd = (e: OnDragEnd) => {\n        const { datas, isDouble, distX, distY } = e;\n        const pos = this.movePos(e);\n        let guides = [...this.state.guides];\n        const { onChangeGuides, zoom, displayDragPos, digit, lockGuides } = this.props;\n        const guidePos = parseFloat((pos / zoom!).toFixed(digit || 0));\n\n        if (displayDragPos) {\n            this.displayElement.style.cssText += `display: none;`;\n        }\n        removeClass(datas.target, DRAGGING);\n        /**\n         * When the drag finishes, the dragEnd event is called.\n         * @memberof Guides\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        this.props.onDragEnd!({\n            ...e,\n            dragElement: datas.target,\n        });\n        /**\n         * The `changeGuides` event occurs when the guideline is added / removed / changed.\n         * @memberof Guides\n         * @event changeGuides\n         * @param {OnChangeGuides} - Parameters for the changeGuides event\n         */\n        if (datas.fromRuler) {\n            if (pos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n                this.setState({\n                    guides: [...guides, guidePos],\n                }, () => {\n                    onChangeGuides!({\n                        guides: [...this.state.guides],\n                        distX,\n                        distY,\n                        isAdd: true,\n                        isRemove: false,\n                        isChange: false,\n                    });\n                });\n            }\n        } else {\n            const index = datas.target.getAttribute(\"data-index\");\n            let isRemove = false;\n            let isChange = false;\n\n            guides = [...guides];\n\n            if (isDouble || guidePos < this.scrollPos) {\n                if (lockGuides && (lockGuides === true || lockGuides.indexOf(\"remove\") > -1)) {\n                    return;\n                }\n                guides.splice(index, 1);\n                isRemove = true;\n            } else if (guides.indexOf(guidePos) > -1) {\n                return;\n            } else {\n                if (lockGuides && (lockGuides === true || lockGuides.indexOf(\"change\") > -1)) {\n                    return;\n                }\n                guides[index] = guidePos;\n                isChange = true;\n            }\n            this.setState({\n                guides,\n            }, () => {\n                const nextGuides = [...this.state.guides];\n                onChangeGuides!({\n                    distX,\n                    distY,\n                    guides: nextGuides,\n                    isAdd: false,\n                    isChange,\n                    isRemove,\n                });\n            });\n        }\n    };\n    private movePos(e: any) {\n        const { datas, distX, distY } = e;\n        const props = this.props;\n        const {\n            type,\n            zoom,\n            snaps,\n            snapThreshold,\n            displayDragPos,\n            digit,\n        } = props;\n        const dragPosFormat = props.dragPosFormat || ((v) => v);\n        const isHorizontal = type === \"horizontal\";\n        const matrixPos = calculateMatrixDist(datas.matrix, [distX, distY]);\n        const offsetPos = datas.offsetPos;\n        const offsetX = matrixPos[0] + offsetPos[0];\n        const offsetY = matrixPos[1] + offsetPos[1];\n        let nextPos = Math.round(isHorizontal ? offsetY : offsetX);\n        let guidePos = parseFloat((nextPos / zoom!).toFixed(digit || 0));\n        const guideSnaps = snaps!.slice().sort((a, b) => {\n            return Math.abs(guidePos - a) - Math.abs(guidePos - b);\n        });\n\n        if (\n            guideSnaps.length &&\n            Math.abs(guideSnaps[0] * zoom! - nextPos) < snapThreshold!\n        ) {\n            guidePos = guideSnaps[0];\n            nextPos = guidePos * zoom!;\n        }\n        if (displayDragPos) {\n            const displayPos =\n                type === \"horizontal\" ? [offsetX, nextPos] : [nextPos, offsetY];\n            this.displayElement.style.cssText += `display: block;transform: translate(-50%, -50%) translate(${displayPos\n                .map((v) => `${v}px`)\n                .join(\", \")})`;\n            this.displayElement.innerHTML = `${dragPosFormat!(guidePos)}`;\n        }\n        datas.target.setAttribute(\"data-pos\", guidePos);\n        datas.target.style.transform = `${this.getTranslateName()}(${nextPos}px)`;\n\n        return nextPos;\n    }\n    private getTranslateName() {\n        return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    }\n}\n"],"names":["prefix","_i","classNames","prefixNames","RULER","ADDER","GUIDES","GUIDE","DRAGGING","DISPLAY_DRAG","GUIDES_CSS","prefixCSS","PROPERTIES","RULER_PROPERTIES","METHODS","EVENTS","GuidesElement","styled","tslib_1","_this","guides","e","datas","inputEvent","_a","onDragStart","lockGuides","addClass","target","onDrag","dragElement","stopPropagation","preventDefault","nextPos","movePos","props","isDouble","distX","distY","pos","state","onChangeGuides","zoom","displayDragPos","digit","guidePos","parseFloat","toFixed","displayElement","style","cssText","removeClass","onDragEnd","fromRuler","scrollPos","indexOf","setState","isAdd","isRemove","isChange","index","getAttribute","isRemove_1","isChange_1","splice","nextGuides","className","cspNonce","rulerStyle","type","translateName","getTranslateName","rulerProps","forEach","name","guideColor","borderTop","guidesColor","borderLeft","React","ref","Ruler","transform","color","renderGuides","_b","showGuides","guideElements","map","i","refs","key","gesto","Gesto","manager","getElement","container","document","body","on","stop","canvasElement","ruler","guidesElement","isHorizontal","originRect","originElement","getBoundingClientRect","matrix","getDistElementMatrix","offsetPos","calculateMatrixDist","clientX","left","clientY","top","offsetLeft","offsetTop","isLockAdd","isLockRemove","isLockChange","adderElement","hasClass","defaultGuides","unset","prevProps","el","display","resize","scroll","snaps","snapThreshold","dragPosFormat","v","matrixPos","offsetX","offsetY","Math","round","guideSnaps","slice","sort","a","b","abs","length","displayPos","join","innerHTML","setAttribute","Guides","width","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAEgBA;qBAAO;;OAAA,YAAAC,uBAAAA;IAAAC,cAAA,gBAAA;;;SACZC,WAAW,MAAX,OAAA,GAAY,iBAAaD,WAAzB,CAAP;;;ACEG,IAAME,KAAK,GAAGJ,MAAM,CAAC,OAAD,CAApB;AACP,AAAO,IAAMK,KAAK,GAAGL,MAAM,CAAC,OAAD,EAAU,OAAV,CAApB;AACP,AAAO,IAAMM,MAAM,GAAGN,MAAM,CAAC,QAAD,CAArB;AACP,AAAO,IAAMO,KAAK,GAAGP,MAAM,CAAC,OAAD,CAApB;AACP,AAAO,IAAMQ,QAAQ,GAAGR,MAAM,CAAC,UAAD,CAAvB;AACP,AAAO,IAAMS,YAAY,GAAGT,MAAM,CAAC,cAAD,CAA3B;AACP,AAAO,IAAMU,UAAU,GAAGC,SAAS,CAAC,QAAD,EAAW,64CAAX,CAA5B;AAsFP,IAAaC,UAAU,IACnB,aACA,cACA,iBACA,SACA,kBACA,YACA,iBACA,iBACA,qBACGC,aAVA;AAaP,IAAaC,OAAO,GAAG,CACnB,WADmB,EAEnB,YAFmB,EAGnB,QAHmB,EAInB,cAJmB,EAKnB,QALmB,CAAhB;AAQP,IAAaC,MAAM,GAAG,CAClB,cADkB,EAElB,WAFkB,EAGlB,MAHkB,EAIlB,SAJkB,CAAf;;ACpGP,IAAMC,aAAa,GAAGC,MAAM,CAAC,KAAD,EAAQP,UAAR,CAA5B;;AAEA;;;EACYQ,SAAA,OAAA,QAAA;;iBADZ;wEAAA;;IAkBWC,WAAA,GAAqB;MACxBC,MAAM,EAAE;KADL;IAIAD,eAAA,GAAoB,CAApB;IAOCA,mBAAA,GAA+B,EAA/B;;IAkNAA,iBAAA,GAAc,UAACE,CAAD;UACVC,eAAA;UAAOC,yBAAP;UACFC,gBAAA;UAAEC,4BAAF;UAAeC,0BAAf;MAENC,QAAQ,CAACL,KAAK,CAACM,MAAP,EAAepB,QAAf,CAAR;;MACAW,KAAI,CAACU,MAAL,CAAYR,CAAZ;;;;;;;;;MAQAI,WAAY,cACLJ;QACHS,WAAW,EAAER,KAAK,CAACM;QAFX,CAAZ;MAIAL,UAAU,CAACQ,eAAX;MACAR,UAAU,CAACS,cAAX;KAlBI;;IAoBAb,YAAA,GAAS,UAACE,CAAD;UACPY,OAAO,GAAGd,KAAI,CAACe,OAAL,CAAab,CAAb,CAAhB;;;;;;;;;MAQAF,KAAI,CAACgB,KAAL,CAAWN,MAAX,cACOR;QACHS,WAAW,EAAET,CAAC,CAACC,KAAF,CAAQM;QAFzB;;aAIOK,OAAP;KAbI;;IAeAd,eAAA,GAAY,UAACE,CAAD;UACRC,eAAA;UAAOc,qBAAP;UAAiBC,eAAjB;UAAwBC,eAAxB;;UACFC,GAAG,GAAGpB,KAAI,CAACe,OAAL,CAAab,CAAb,CAAZ;;UACID,MAAM,GAAOD,KAAI,CAACqB,KAAL,CAAWpB,MAAX,MAAA,EAAjB;;UACMI,gBAAA;UAAEiB,kCAAF;UAAkBC,cAAlB;UAAwBC,kCAAxB;UAAwCC,gBAAxC;UAA+ClB,0BAA/C;UACAmB,QAAQ,GAAGC,UAAU,CAAC,CAACP,GAAG,GAAGG,IAAP,EAAcK,OAAd,CAAsBH,KAAK,IAAI,CAA/B,CAAD,CAA3B;;UAEID,cAAJ,EAAoB;QAChBxB,KAAI,CAAC6B,cAAL,CAAoBC,KAApB,CAA0BC,OAA1B,IAAqC,gBAArC;;;MAEJC,WAAW,CAAC7B,KAAK,CAACM,MAAP,EAAepB,QAAf,CAAX;;;;;;;;MAOAW,KAAI,CAACgB,KAAL,CAAWiB,SAAX,cACO/B;QACHS,WAAW,EAAER,KAAK,CAACM;QAFvB;;;;;;;;;UAUIN,KAAK,CAAC+B,SAAV,EAAqB;YACbd,GAAG,IAAIpB,KAAI,CAACmC,SAAZ,IAAyBlC,MAAM,CAACmC,OAAP,CAAeV,QAAf,IAA2B,CAAxD,EAA2D;UACvD1B,KAAI,CAACqC,QAAL,CAAc;YACVpC,MAAM,EAAMA,MAAM,OAAN,EAAQyB,SAAR;WADhB,EAEG;YACCJ,cAAe,CAAC;cACZrB,MAAM,EAAMD,KAAI,CAACqB,KAAL,CAAWpB,MAAX,MAAA,EADA;cAEZiB,KAAK,OAFO;cAGZC,KAAK,OAHO;cAIZmB,KAAK,EAAE,IAJK;cAKZC,QAAQ,EAAE,KALE;cAMZC,QAAQ,EAAE;aANC,CAAf;WAHJ;;OAFR,MAeO;YACGC,KAAK,GAAGtC,KAAK,CAACM,MAAN,CAAaiC,YAAb,CAA0B,YAA1B,CAAd;YACIC,UAAQ,GAAG,KAAf;YACIC,UAAQ,GAAG,KAAf;QAEA3C,MAAM,GAAOA,MAAM,MAAN,EAAb;;YAEIgB,QAAQ,IAAIS,QAAQ,GAAG1B,KAAI,CAACmC,SAAhC,EAA2C;cACnC5B,UAAU,KAAKA,UAAU,KAAK,IAAf,IAAuBA,UAAU,CAAC6B,OAAX,CAAmB,QAAnB,IAA+B,CAAC,CAA5D,CAAd,EAA8E;;;;UAG9EnC,MAAM,CAAC4C,MAAP,CAAcJ,KAAd,EAAqB,CAArB;UACAE,UAAQ,GAAG,IAAX;SALJ,MAMO,IAAI1C,MAAM,CAACmC,OAAP,CAAeV,QAAf,IAA2B,CAAC,CAAhC,EAAmC;;SAAnC,MAEA;cACCnB,UAAU,KAAKA,UAAU,KAAK,IAAf,IAAuBA,UAAU,CAAC6B,OAAX,CAAmB,QAAnB,IAA+B,CAAC,CAA5D,CAAd,EAA8E;;;;UAG9EnC,MAAM,CAACwC,KAAD,CAAN,GAAgBf,QAAhB;UACAkB,UAAQ,GAAG,IAAX;;;QAEJ5C,KAAI,CAACqC,QAAL,CAAc;UACVpC,MAAM;SADV,EAEG;cACO6C,UAAU,GAAO9C,KAAI,CAACqB,KAAL,CAAWpB,MAAX,MAAA,EAAvB;;UACAqB,cAAe,CAAC;YACZJ,KAAK,OADO;YAEZC,KAAK,OAFO;YAGZlB,MAAM,EAAE6C,UAHI;YAIZR,KAAK,EAAE,KAJK;YAKZE,QAAQ,YALI;YAMZD,QAAQ;WANG,CAAf;SAJJ;;KAhEA;;;;;;;gBAnPD,GAAP;QACUlC,eAAA;QACF0C,wBADE;QAEFC,sBAFE;QAGFxB,kCAHE;QAIFyB,0BAJE;QAKFnB,gBALE;QAMFoB,cANE;QAOF3B,cAPE;QASAP,KAAK,GAAG,KAAKA,KAAnB;QACMmC,aAAa,GAAG,KAAKC,gBAAL,EAAtB;QAEMC,UAAU,GAAe,EAA/B;IAEA3D,YAAgB,CAAC4D,OAAjB,CAAyB,UAACC,IAAD;UACjBA,IAAI,KAAK,OAAb,EAAsB;;;;MAGrBF,UAAkB,CAACE,IAAD,CAAlB,GAA2BvC,KAAK,CAACuC,IAAD,CAAhC;KAJL;QAMMC,UAAU,GACZN,IAAI,KAAK,YAAT,GACM;MAAEO,SAAS,EAAE,gBAAc,KAAKzC,KAAL,CAAW0C;KAD5C,GAEM;MAAEC,UAAU,EAAE,gBAAc,KAAK3C,KAAL,CAAW0C;KAHjD;WAKIE,aAAA,CAAC/D,aAAD;MACIgE,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,SAAP;MACRb,QAAQ,EAAEA;MACVD,SAAS,EAAKlE,MAAM,CAAC,SAAD,EAAYqE,IAAZ,CAAN,MAAA,GAA2BH;MACzCjB,KAAK,EAAEA;KAJX,EAMI8B,aAAA,MAAA;MACIb,SAAS,EAAElE,MAAM,CAAC,cAAD;MACjBgF,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,eAAP;KAFZ,CANJ,EAUID,aAAA,CAACE,KAAD;MACID,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,OAAP;MACR/B,KAAK,EAAEmB;OACHI,WAHR,CAVJ,EAeIO,aAAA,MAAA;MACIb,SAAS,EAAE5D;MACX0E,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,eAAP;MACR/B,KAAK,EAAE;QACHiC,SAAS,EAAKZ,aAAa,MAAb,GACV,CAAC,KAAKhB,SAAN,GAAkBZ,IADR;;KAJtB,EASKC,cAAc,IACXoC,aAAA,MAAA;MACIb,SAAS,EAAEzD;MACXuE,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,gBAAP;MACR/B,KAAK,EAAE;QAAEkC,KAAK,EAAE,KAAKhD,KAAL,CAAW0C;;KAH/B,CAVR,EAgBIE,aAAA,MAAA;MAAKb,SAAS,EAAE7D;MAAO2E,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,cAAP;MAAwB/B,KAAK,eAAM0B;KAAlE,CAhBJ,EAiBK,KAAKS,YAAL,CAAkB;MAAET,UAAU;KAA9B,CAjBL,CAfJ,CADJ;GAzBG;;sBA+DA,GAAP,UAAoBnD,EAApB;oBAAA;;QAAsBmD;QACZU,eAAA;QAAEC,0BAAF;QAAcjB,cAAd;QAAoB3B,cAApB;QACA4B,aAAa,GAAG,KAAKC,gBAAL,EAAtB;QACMnD,MAAM,GAAO,KAAKoB,KAAL,CAAWpB,MAAX,MAAA,EAAnB;SACKmE,aAAL,GAAqB,EAArB;;QACID,UAAJ,EAAgB;aACLlE,MAAM,CAACoE,GAAP,CAAW,UAACjD,GAAD,EAAMkD,CAAN;eACNV,aAAA,MAAA;UAAKb,SAAS,EAAElE,MAAM,CAAC,OAAD,EAAUqE,IAAV;UAC1BW,GAAG,EAAEU,IAAI,CAACvE,KAAD,EAAO,eAAP,EAAwBsE,CAAxB;UACTE,GAAG,EAAEF;wBACOA;sBACFlD;UACVU,KAAK,eACE0B;YACHO,SAAS,EAAKZ,aAAa,MAAb,GAAiB/B,GAAG,GAAGG,IAAvB;;SAPd,CAAR;OADG,CAAP;;;;GAND;;2BAoBA,GAAP;oBAAA;;SACSkD,KAAL,GAAa,IAAIC,KAAJ,CAAU,KAAKC,OAAL,CAAaC,UAAb,EAAV,EAAqC;MAC9CC,SAAS,EAAEC,QAAQ,CAACC;KADX,EAEVC,EAFU,CAEP,WAFO,EAEM,UAAA9E,CAAA;UACTG,gBAAA;UACF6C,cADE;UAEF3B,cAFE;UAGFhB,0BAHE;;UAMFA,UAAU,KAAK,IAAnB,EAAyB;QACrBL,CAAC,CAAC+E,IAAF;;;;UAGE7E,UAAU,GAAGF,CAAC,CAACE,UAArB;UACMK,MAAM,GAAGL,UAAU,CAACK,MAA1B;UACMN,KAAK,GAAGD,CAAC,CAACC,KAAhB;UACM+E,aAAa,GAAGlF,KAAI,CAACmF,KAAL,CAAWD,aAAjC;UACME,aAAa,GAAGpF,KAAI,CAACoF,aAA3B;UACMC,YAAY,GAAGnC,IAAI,KAAK,YAA9B;;UACMoC,UAAU,GAAGtF,KAAI,CAACuF,aAAL,CAAmBC,qBAAnB,EAAnB;;UACMC,MAAM,GAAGC,oBAAoB,CAAC1F,KAAI,CAAC2E,OAAL,CAAaC,UAAb,EAAD,CAAnC;UACMe,SAAS,GAAGC,mBAAmB,CAACH,MAAD,EAAS,CAC1CvF,CAAC,CAAC2F,OAAF,GAAYP,UAAU,CAACQ,IADmB,EAE1C5F,CAAC,CAAC6F,OAAF,GAAYT,UAAU,CAACU,GAFmB,CAAT,CAArC;MAIAL,SAAS,CAAC,CAAD,CAAT,IAAgBP,aAAa,CAACa,UAA9B;MACAN,SAAS,CAAC,CAAD,CAAT,IAAgBP,aAAa,CAACc,SAA9B;MACAP,SAAS,CAACN,YAAY,GAAG,CAAH,GAAO,CAApB,CAAT,IAAmCrF,KAAI,CAACmC,SAAL,GAAiBZ,IAApD;MAEIpB,KAAK,CAACwF,SAAN,GAAkBA,SAAlB;MACAxF,KAAK,CAACsF,MAAN,GAAeA,MAAf;UAEAU,SAAS,GAAG5F,UAAU,IAAIA,UAAU,CAAC6B,OAAX,CAAmB,KAAnB,IAA4B,CAAC,CAA3D;UACIgE,YAAY,GAAG7F,UAAU,IAAIA,UAAU,CAAC6B,OAAX,CAAmB,QAAnB,IAA+B,CAAC,CAAjE;UACIiE,YAAY,GAAG9F,UAAU,IAAIA,UAAU,CAAC6B,OAAX,CAAmB,QAAnB,IAA+B,CAAC,CAAjE;;UAEI3B,MAAM,KAAKyE,aAAf,EAA8B;YACtBiB,SAAJ,EAAe;UACXjG,CAAC,CAAC+E,IAAF;;;;QAGJ9E,KAAK,CAAC+B,SAAN,GAAkB,IAAlB;QACA/B,KAAK,CAACM,MAAN,GAAeT,KAAI,CAACsG,YAApB,CAN0B;OAA9B,MAQO,IAAIC,QAAQ,CAAC9F,MAAD,EAASrB,KAAT,CAAZ,EAA6B;YAC5BgH,YAAY,IAAIC,YAApB,EAAkC;UAC9BnG,CAAC,CAAC+E,IAAF;;;;QAGJ9E,KAAK,CAACM,MAAN,GAAeA,MAAf,CALgC;OAA7B,MAOA;QACHP,CAAC,CAAC+E,IAAF;eACO,KAAP;;;MAEJjF,KAAI,CAACM,WAAL,CAAiBJ,CAAjB;KAvDS,EAwDV8E,EAxDU,CAwDP,MAxDO,EAwDC,KAAKtE,MAxDN,EAwDcsE,EAxDd,CAwDiB,SAxDjB,EAwD4B,KAAK/C,SAxDjC,CAAb;SAyDKI,QAAL,CAAc;MAAEpC,MAAM,EAAE,KAAKe,KAAL,CAAWwF,aAAX,IAA4B;KAApD;GA1DG;;8BA4DA,GAAP;SACS/B,KAAL,CAAWgC,KAAX;GADG;;4BAGA,GAAP,UAA0BC,SAA1B;QACQA,SAAS,CAACF,aAAV,KAA4B,KAAKxF,KAAL,CAAWwF,aAA3C,EAA0D;;WAEjDnE,QAAL,CAAc;QAAEpC,MAAM,EAAE,KAAKe,KAAL,CAAWwF,aAAX,IAA4B;OAApD;;GAHD;;;;;;;;oBAWA,GAAP,UAAkBvG,MAAlB;SACSoC,QAAL,CAAc;MACVpC,MAAM,EAAMA,MAAM,MAAN;KADhB;GADG;;;;;;;;mBAUA,GAAP;WACe,KAAKoB,KAAL,CAAWpB,MAAX,MAAA,EAAX;GADG;;;;;;;;sBAQA,GAAP,UAAoBmB,GAApB;QACYG,sBAAA;QACF6D,aAAa,GAAG,KAAKA,aAA3B;SAEKjD,SAAL,GAAiBf,GAAjB;IACAgE,aAAa,CAACtD,KAAd,CAAoBiC,SAApB,GAAmC,KAAKX,gBAAL,QAAA,GAC/B,CAAChC,GAAD,GAAOG,IADwB,QAAnC;QAIMtB,MAAM,GAAO,KAAKoB,KAAL,CAAWpB,MAAX,MAAA,EAAnB;SACKmE,aAAL,CAAmBd,OAAnB,CAA2B,UAACqD,EAAD,EAAKrC,CAAL;UACnB,CAACqC,EAAL,EAAS;;;;MAGTA,EAAE,CAAC7E,KAAH,CAAS8E,OAAT,GAAmB,CAACxF,GAAD,GAAOnB,MAAM,CAACqE,CAAD,CAAb,GAAmB,CAAnB,GAAuB,MAAvB,GAAgC,OAAnD;KAJJ;GAVG;;;;;;;;gBAsBA,GAAP;SACSa,KAAL,CAAW0B,MAAX;GADG;;;;;;;;gBAQA,GAAP,UAAczF,GAAd;SACS+D,KAAL,CAAW2B,MAAX,CAAkB1F,GAAlB;GADG;;iBAqHC,GAAR,UAAgBlB,CAAhB;QACYC,eAAA;QAAOe,eAAP;QAAcC,eAAd;QACFH,KAAK,GAAG,KAAKA,KAAnB;QAEIkC,iBAAA;QACA3B,iBADA;QAEAwF,mBAFA;QAGAC,mCAHA;QAIAxF,qCAJA;QAKAC,mBALA;;QAOEwF,aAAa,GAAGjG,KAAK,CAACiG,aAAN,IAAwB,UAACC,CAAD;aAAOA,CAAA;KAArD;;QACM7B,YAAY,GAAGnC,IAAI,KAAK,YAA9B;QACMiE,SAAS,GAAGvB,mBAAmB,CAACzF,KAAK,CAACsF,MAAP,EAAe,CAACvE,KAAD,EAAQC,KAAR,CAAf,CAArC;QACMwE,SAAS,GAAGxF,KAAK,CAACwF,SAAxB;QACMyB,OAAO,GAAGD,SAAS,CAAC,CAAD,CAAT,GAAexB,SAAS,CAAC,CAAD,CAAxC;QACM0B,OAAO,GAAGF,SAAS,CAAC,CAAD,CAAT,GAAexB,SAAS,CAAC,CAAD,CAAxC;QACI7E,OAAO,GAAGwG,IAAI,CAACC,KAAL,CAAWlC,YAAY,GAAGgC,OAAH,GAAaD,OAApC,CAAd;QACI1F,QAAQ,GAAGC,UAAU,CAAC,CAACb,OAAO,GAAGS,IAAX,EAAkBK,OAAlB,CAA0BH,KAAK,IAAI,CAAnC,CAAD,CAAzB;QACM+F,UAAU,GAAGT,KAAM,CAACU,KAAP,GAAeC,IAAf,CAAoB,UAACC,CAAD,EAAIC,CAAJ;aAC5BN,IAAI,CAACO,GAAL,CAASnG,QAAQ,GAAGiG,CAApB,IAAyBL,IAAI,CAACO,GAAL,CAASnG,QAAQ,GAAGkG,CAApB,CAAhC;KADe,CAAnB;;QAKIJ,UAAU,CAACM,MAAX,IACAR,IAAI,CAACO,GAAL,CAASL,UAAU,CAAC,CAAD,CAAV,GAAgBjG,IAAhB,GAAwBT,OAAjC,IAA4CkG,aAFhD,EAGE;MACEtF,QAAQ,GAAG8F,UAAU,CAAC,CAAD,CAArB;MACA1G,OAAO,GAAGY,QAAQ,GAAGH,IAArB;;;QAEAC,cAAJ,EAAoB;UACVuG,UAAU,GACZ7E,IAAI,KAAK,YAAT,GAAwB,CAACkE,OAAD,EAAUtG,OAAV,CAAxB,GAA6C,CAACA,OAAD,EAAUuG,OAAV,CADjD;WAEKxF,cAAL,CAAoBC,KAApB,CAA0BC,OAA1B,IAAqC,+DAA6DgG,UAAU,CACvG1D,GAD6F,CACzF,UAAC6C,CAAD;eAAUA,CAAC,OAAJ;OADkF,EAE7Fc,IAF6F,CAExF,IAFwF,CAA7D,MAArC;WAGKnG,cAAL,CAAoBoG,SAApB,GAAgC,KAAGhB,aAAc,CAACvF,QAAD,CAAjD;;;IAEJvB,KAAK,CAACM,MAAN,CAAayH,YAAb,CAA0B,UAA1B,EAAsCxG,QAAtC;IACAvB,KAAK,CAACM,MAAN,CAAaqB,KAAb,CAAmBiC,SAAnB,GAAkC,KAAKX,gBAAL,QAAA,GAA2BtC,OAA3B,QAAlC;WAEOA,OAAP;GAzCI;;0BA2CA,GAAR;WACW,KAAKE,KAAL,CAAWkC,IAAX,KAAoB,YAApB,GAAmC,YAAnC,GAAkD,YAAzD;GADI;;EAzYMiF,mBAAA,GAA4B;IACtCpF,SAAS,EAAE,EAD2B;IAEtCyD,aAAa,EAAE,EAFuB;IAGtC/E,KAAK,EAAE,CAH+B;IAItCD,cAAc,EAAE,KAJsB;IAKtCkC,WAAW,EAAE,SALyB;IAMtCuD,aAAa,EAAE,UAAAC,CAAA;aAAKA,CAAA;KANkB;IAOtC3G,UAAU,EAAE,KAP0B;IAQtC4D,UAAU,EAAE,IAR0B;IAStC4C,KAAK,EAAE,EAT+B;IAUtCC,aAAa,EAAE,CAVuB;IAWtClF,KAAK,EAAE;MAAEsG,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE;KAXM;IAYtCnF,IAAI,EAAE,YAZgC;IAatC3B,IAAI,EAAE;GAbI;eA4YlB;EA9YYqC,cADZ;;;;;"}